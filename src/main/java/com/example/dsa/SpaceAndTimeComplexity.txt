 What is time complexity?
 -> Time taken by the also to perform the opn on given input.

 Why need space and time complexity?
 -> To analyze which algo is fast.


 big O notation: upper bound  eg: n^2 + n+ = O(n^2)

 Omega notation: mid bound

 theta notation: lower bound

OldCode.Recursion2: n/2+n/4----n/n:  O(nlogn)


algo vs time complexity: 10^8 operations rule

Size                   Time Complexity
<=[10, 11]              O(n!), O(n^6)
<=[15, 18]              O(2^n * n^2)
< 100                   O(n^4)
< 400                   O(n^3)
< 2000                  O(n^2 * logn)
< 10^4                  O(n^2 )
< 10^6                  O(n*logn)
< 10^8                  O(n), O(logn)





